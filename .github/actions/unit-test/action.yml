name: 'unit-test'
runs:
  using: "composite"
  steps:
    - name: Set up Gradle
      uses: ./.github/actions/setup-gradle
    - name: Test
      shell: bash
      run: |
        set -Eeuo pipefail 
        # This Gradle task runs across all compisite build projects and because it's invoked from 
        # the root it'll try to use concurrent yarn instances that all try to write to the same output
        # folder. A single Gradle worker avoids this at the cost of a slower build but this is okay for now.
        ./gradlew --no-daemon --continue --max-workers=1 jsTest
    - name: Generate test report
      uses: mikepenz/action-junit-report@v4
      if: always() # Ensure all test reports are collected, even after errors
      with:
        report_paths: |
          **/TEST-*.xml
        check_name: unit-test-results
    - name: Artifacts
      uses: actions/upload-artifact@v4
      if: always() # Ensure all artifacts are collected, even after errors
      with:
        name: Tests
        path: |
          **/TEST-*.xml