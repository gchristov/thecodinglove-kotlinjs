name: thecodinglove-proxy-web
runtime: yaml
description: Deploys the proxy web infra

dependencies:
  gcp: 7.11.2 # https://github.com/pulumi/pulumi-gcp/issues/1809

variables:
  domain: thecodinglove.crowdstandout.com
  location: europe-west1
  repositoryId: thecodinglove

resources:

  ########################################
  # Stack references
  ########################################

  search-reference:
    type: pulumi:pulumi:StackReference
    properties:
      name: gchristov/thecodinglove-search/prod
  statistics-reference:
    type: pulumi:pulumi:StackReference
    properties:
      name: gchristov/thecodinglove-statistics/prod
  self-destruct-reference:
    type: pulumi:pulumi:StackReference
    properties:
      name: gchristov/thecodinglove-self-destruct/prod
  slack-reference:
    type: pulumi:pulumi:StackReference
    properties:
      name: gchristov/thecodinglove-slack/prod
  slack-web-reference:
    type: pulumi:pulumi:StackReference
    properties:
      name: gchristov/thecodinglove-slack-web/prod
  landing-page-web-reference:
    type: pulumi:pulumi:StackReference
    properties:
      name: gchristov/thecodinglove-landing-page-web/prod

  ########################################
  # proxy-web-service
  ########################################

  # Manages the binary.
  proxy-web-service-binary:
    type: docker:Image
    properties:
      build:
        args:
          SEARCH_SERVICE_HOST: ${search-reference.outputs["searchServiceHost"]}
          SEARCH_SERVICE_PATH: ${search-reference.outputs["searchServicePath"]}
          SEARCH_SERVICE_PUBSUB_PATH: ${search-reference.outputs["searchServicePubSubPath"]}
          STATISTICS_SERVICE_HOST: ${statistics-reference.outputs["statisticsServiceHost"]}
          STATISTICS_SERVICE_PATH: ${statistics-reference.outputs["statisticsServicePath"]}
          SELF_DESTRUCT_SERVICE_HOST: ${self-destruct-reference.outputs["selfDestructServiceHost"]}
          SELF_DESTRUCT_SERVICE_PATH: ${self-destruct-reference.outputs["selfDestructServicePath"]}
          SLACK_SERVICE_HOST: ${slack-reference.outputs["slackServiceHost"]}
          SLACK_SERVICE_PATH: ${slack-reference.outputs["slackServicePath"]}
          SLACK_SERVICE_PUBSUB_PATH: ${slack-reference.outputs["slackServicePubSubPath"]}
          SLACK_WEB_SERVICE_HOST: ${slack-web-reference.outputs["slackWebServiceHost"]}
          SLACK_WEB_SERVICE_PATH: ${slack-web-reference.outputs["slackWebServicePath"]}
          LANDING_PAGE_WEB_SERVICE_HOST: ${landing-page-web-reference.outputs["landingPageWebServiceHost"]}
        platform: linux/amd64
        context: ../service/build/dist/js
      imageName: ${location}-docker.pkg.dev/${gcp:project}/${repositoryId}/proxy-web-service:latest
      registry:
        server: ${location}-docker.pkg.dev
        username: _json_key
        password:
          fn::secret:
            fn::readFile: ${gcp:credentials}
    options:
      protect: true
  # Manages the Cloud Run service.
  proxy-web-service:
    type: gcp:cloudrunv2:Service
    properties:
      ingress: INGRESS_TRAFFIC_ALL
      location: ${location}
      name: proxy-web-service
      template:
        containers:
          - image: ${proxy-web-service-binary.repoDigest}
            ports:
              - containerPort: 80
                name: http1
            resources:
              cpuIdle: true
              limits:
                cpu: 1000m
                memory: 512Mi
            startupProbe:
              failureThreshold: 1
              periodSeconds: 240
              tcpSocket:
                port: 80
              timeoutSeconds: 240
        maxInstanceRequestConcurrency: 80
        scaling:
          maxInstanceCount: 100
          minInstanceCount: 1
        timeout: 300s
      traffics:
        - percent: 100
          type: TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST
    options:
      protect: true
  # Manages the Cloud Run service policy.
  proxy-web-service-policy:
    type: gcp:cloudrunv2:ServiceIamPolicy
    properties:
      name: ${proxy-web-service.name}
      location: ${location}
      policyData: |
        {
          "bindings": [
            {
              "role": "roles/run.invoker",
              "members": [
                "allUsers"
              ]
            }
          ]
        }
    options:
      protect: true
  # Manages the Cloud Run service domain mapping.
  proxy-web-service-domain-mapping:
    type: gcp:cloudrun:DomainMapping
    properties:
      location: ${proxy-web-service.location}
      metadata:
        namespace: ${gcp:project}
      name: ${domain}
      spec:
        routeName: proxy-web-service
    options:
      protect: true